///
/// \file VTCEmvTag.h
///

#ifndef VTCEmvTag_h
#define VTCEmvTag_h

///
/// \enum VTCEmvTag
///
typedef enum VTCEmvTag : unsigned int
{
    /// Uniquely identifies the acquirer within each payment system.
    VTCEmvTagAcquirerIdentifier = 0x9F01,
    
    /// Indicates the data input and output capabilities of the terminal.
    VTCEmvTagAdditionalTerminalCapabilities = 0x9F40,
    
    /// Authorised amount of the transaction (excluding adjustments).
    VTCEmvTagAmountAuthorisedBinary = 0x81,
    
    /// Authorised amount of the transaction (excluding adjustments).
    VTCEmvTagAmountAuthorisedNumeric = 0x9F02,
    
    /// Secondary amount associated with the transaction representing a cashback amount.
    VTCEmvTagAmountOtherBinary = 0x9F04,
    
    /// Secondary amount associated with the transaction representing a cashback amount.
    VTCEmvTagAmountOtherNumeric = 0x9F03,
    
    /// Authorised amount expressed in the reference currency.
    VTCEmvTagAmountReferenceCurrency = 0x9F3A,
    
    /// Cryptogram returned by the ICC in response of the GENERATE AC command.
    VTCEmvTagApplicationCryptogram = 0x9F26,
    
    /// Indicates the currency in which the account is managed according to ISO 4217.
    VTCEmvTagApplicationCurrencyCode = 0x9F42,
    
    /// Indicates the implied position of the decimal point from the right of the amount represented according to ISO 4217.
    VTCEmvTagApplicationCurrencyExponent = 0x9F44,
    
    /// Issuer or payment system specified data relating to the application.
    VTCEmvTagApplicationDiscretionaryData = 0x9F05,
    
    /// Date from which the application may be used.
    VTCEmvTagApplicationEffectiveDate = 0x5F25,
    
    /// Date after which application expires.
    VTCEmvTagApplicationExpirationDate = 0x5F24,
    
    /// Indicates the location (SFI, range of records) of the AEFs related to a given application.
    VTCEmvTagApplicationFileLocator = 0x94,
    
    /// Identifies the application as described in ISO/IEC 7816-5.
    VTCEmvTagApplicationIdentifierCard = 0x4F,
    
    /// Identifies the application as described in ISO/IEC 7816-5.
    VTCEmvTagApplicationIdentifierTerminal = 0x9F06,
    
    /// Indicates the capabilities of the card to support specific functions in the application.
    VTCEmvTagApplicationInterchangeProfile = 0x82,
    
    /// Mnemonic associated with the AID according to ISO/IEC 7816-5.
    VTCEmvTagApplicationLabel = 0x50,
    
    /// Preferred mnemonic associated with the AID.
    VTCEmvTagApplicationPreferredName = 0x9F12,
    
    /// Valid cardholder account number.
    VTCEmvTagApplicationPrimaryAccountNumber = 0x5A,
    
    /// Identifies and differentiates cards with the same PAN.
    VTCEmvTagApplicationPrimaryAccountNumberSequenceNumber = 0x5F34,
    
    /// Indicates the priority of a given application or group of applications in a directory.
    VTCEmvTagApplicationPriorityIndicator = 0x87,
    
    /// 1-4 currency codes used between the terminal and the ICC when the Transaction Currency Code is different from the Application Currency Code; each code is 3 digits according to ISO 4217.
    VTCEmvTagApplicationReferenceCurrency = 0x9F3B,
    
    /// Indicates the implied position of the decimal point from the right of the amount, for each of the 1-4 reference currencies represented according to ISO 4217.
    VTCEmvTagApplicationReferenceCurrencyExponent = 0x9F43,
    
    /// Contains one or more data objects relevant to an application directory entry according to ISO/IEC 7816-5.
    VTCEmvTagApplicationTemplate = 0x61,
    
    /// Counter maintained by the application in the ICC (incrementing the ATC is managed by the ICC).
    VTCEmvTagApplicationTransactionCounter = 0x9F36,
    
    /// Indicates issuer's specified restrictions on the geographic usage and services allowed for the application.
    VTCEmvTagApplicationUsageControl = 0x9F07,
    
    /// Version number assigned by the payment system for the application.
    VTCEmvTagApplicationVersionNumberCard = 0x9F08,
    
    /// Version number assigned by the payment system for the application.
    VTCEmvTagApplicationVersionNumberTerminal = 0x9F09,
    
    /// Value generated by the authorisation authority for an approved transaction.
    VTCEmvTagAuthorisationCode = 0x89,
    
    /// Code that defines the disposition of a message.
    VTCEmvTagAuthorisationResponseCode = 0x8A,
    
    /// Uniquely identifies a bank as defined in ISO 9362..
    VTCEmvTagBankIdentifierCode = 0x5F54,
    
    /// List of data objects (tag and length) to be passed to the ICC in the first GENERATE AC command.
    VTCEmvTagCardRiskManagementDataObjectList1 = 0x8C,
    
    /// List of data objects (tag and length) to be passed to the ICC in the second GENERATE AC command.
    VTCEmvTagCardRiskManagementDataObjectList2 = 0x8D,
    
    /// Indicates cardholder name according to ISO 7813.
    VTCEmvTagCardholderName = 0x5F20,
    
    /// Indicates the whole cardholder name when greater than 26 characters using the same coding convention as in ISO 7813.
    VTCEmvTagCardholderNameExtended = 0x9F0B,
    
    /// Identifies a method of verification of the cardholder supported by the application.
    VTCEmvTagCardholderVerificationMethodList = 0x8E,
    
    /// Indicates the results of the last CVM performed.
    VTCEmvTagCardholderVerificationMethodResults = 0x9F34,
    
    /// Identifies the certification authority's public key in conjunction with the RID.
    VTCEmvTagCertificationAuthorityPublicKeyIndexCard = 0x8F,
    
    /// Identifies the certification authority's public key in conjunction with the RID.
    VTCEmvTagCertificationAuthorityPublicKeyIndexTerminal = 0x9F22,
    
    /// Identifies the data field of a command message.
    VTCEmvTagCommandTemplate = 0x83,
    
    /// Indicates the type of cryptogram and the actions to be performed by the terminal.
    VTCEmvTagCryptogramInformationData = 0x9F27,
    
    /// Contains data for transmission to the issuer.
    VTCEmvTagCustomerExclusiveData = 0x9F7C,
    
    /// An issuer assigned value that is retained by the terminal during the verification process of the Signed Static Application Data.
    VTCEmvTagDataAuthenticationCode = 0x9F45,
    
    /// Identifies the name of the DF as described in ISO/IEC 7816-4.
    VTCEmvTagDedicatedFileName = 0x84,
    
    /// Identifies the name of a DF associated with a directory.
    VTCEmvTagDirectoryDefinitionFileName = 0x9D,
    
    /// Issuer discretionary part of the directory according to ISO/IEC 7816-5.
    VTCEmvTagDirectoryDiscretionaryTemplate = 0x73,
    
    /// List of data objects (tag and length) to be passed to the ICC in the INTERNAL AUTHENTICATE command.
    VTCEmvTagDynamicDataAuthenticationDataObjectList = 0x9F49,
    
    /// Template proprietary to the EMV specification.
    VTCEmvTagEvmProprietaryTemplate = 0x70,
    
    /// Issuer discretionary part of the FCI.
    VTCEmvTagFileControlInformationIssuerDiscretionaryData = 0xBF0C,
    
    /// Identifies the data object proprietary to this specification in the FCI template according to ISO/IEC 7816-4.
    VTCEmvTagFileControlInformationProprietaryTemplate = 0xA5,
    
    /// Identifies the FCI template according to ISO/IEC 7816-4.
    VTCEmvTagFileControlInformationTemplate = 0x6F,
    
    /// Indicates the form factor of the consumer payment device and the type of contactless interface over which the transaction was conducted. This information is made available to the issuer host.
    VTCEmvTagFormFactorIndicator = 0x9F6E,
    
    /// Time-variant number generated by the ICC, to be captured by the terminal.
    VTCEmvTagIccDynamicNumber = 0x9F4C,
    
    /// ICC PIN Encipherment Public Key certified by the issuer.
    VTCEmvTagIntegratedCircuitCardPinEnciphermentPublicKeyCertificate = 0x9F2D,
    
    /// ICC PIN Encipherment Public Key Exponent used for PIN encipherment.
    VTCEmvTagIntegratedCircuitCardPinEnciphermentPublicKeyExponent = 0x9F2E,
    
    /// Remaining digits of the ICC PIN Encipherment Public Key Modulus.
    VTCEmvTagIntegratedCircuitCardPinEnciphermentPublicKeyRemainder = 0x9F2F,
    
    /// ICC Public Key certified by the issuer.
    VTCEmvTagIntegratedCircuitCardPublicKeyCertificate = 0x9F46,
    
    /// ICC Public Key Exponent used for the verification of the Signed Dynamic Application Data.
    VTCEmvTagIntegratedCircuitCardPublicKeyExponent = 0x9F47,
    
    /// Remaining digits of the ICC Public Key Modulus.
    VTCEmvTagIntegratedCircuitCardPublicKeyRemainder = 0x9F48,
    
    /// Unique and permanent serial number assigned to the IFD by the manufacturer.
    VTCEmvTagInterfaceDeviceSerialNumber = 0x9F1E,
    
    /// Uniquely identifies the account of a customer at a financial institution as defined in ISO 13616..
    VTCEmvTagInternationalBankAccountNumber = 0x5F53,
    
    /// Specifies the issuer's conditions that cause a transaction to be rejected if it might have been approved online, but the terminal is unable to process the transaction online.
    VTCEmvTagIssuerActionCodeDefault = 0x9F0D,
    
    /// Specifies the issuer's conditions that cause the denial of a transaction without attempt to go online.
    VTCEmvTagIssuerActionCodeDenial = 0x9F0E,
    
    /// Specifies the issuer's conditions that cause a transaction to be transmitted online.
    VTCEmvTagIssuerActionCodeOnline = 0x9F0F,
    
    /// Contains proprietary application data for transmission to the issuer in an online transaction.
    VTCEmvTagIssuerApplicationData = 0x9F10,
    
    /// Data sent to the ICC for online issuer authentication.
    VTCEmvTagIssuerAuthenticationData = 0x91,
    
    /// Indicates the code table according to ISO/IEC 8859 for displaying the Application Preferred Name.
    VTCEmvTagIssuerCodeTableIndex = 0x9F11,
    
    /// Indicates the country of the issuer according to ISO 3166.
    VTCEmvTagIssuerCountryCode = 0x5F28,
    
    /// Indicates the country of the issuer as defined in ISO 3166 (using a 2 character alphabetic code).
    VTCEmvTagIssuerCountryCodeAlpha2Format = 0x5F55,
    
    /// Indicates the country of the issuer as defined in ISO 3166 (using a 3 character alphabetic code).
    VTCEmvTagIssuerCountryCodeAlpha3Format = 0x5F56,
    
    /// The number that identifies the major industry and the card issuer and that forms the first part of the Primary Account Number (PAN).
    VTCEmvTagIssuerIdentificationNumber = 0x42,
    
    /// Issuer public key certified by a certification authority.
    VTCEmvTagIssuerPublicKeyCertificate = 0x90,
    
    /// Issuer public key exponent used for theverification of the Signed Static Application Data and the ICC Public Key Certificate.
    VTCEmvTagIssuerPublicKeyExponent = 0x9F32,
    
    /// Remaining digits of the Issuer Public Key Modulus.
    VTCEmvTagIssuerPublicKeyRemainder = 0x92,
    
    /// Contains a command for transmission to the ICC.
    VTCEmvTagIssuerScriptCommand = 0x86,
    
    /// Identification of the Issuer Script.
    VTCEmvTagIssuerScriptIdentifier = 0x9F18,
    
    /// Indicates the results of Issuer Script processing. When the reader/terminal transmits this data element to the acquirer, in this version of Kernel 3, it is acceptable that only byte 1 is transmitted, although it is preferable for all five bytes to be transmitted.
    VTCEmvTagIssuerScriptResults = 0x9F5B,
    
    /// Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command.
    VTCEmvTagIssuerScriptTemplate1 = 0x71,
    
    /// Contains proprietary issuer data for transmission to the ICC after the second GENERATE AC command.
    VTCEmvTagIssuerScriptTemplate2 = 0x72,
    
    /// The URL provides the location of the Issuer's Library Server on the Internet..
    VTCEmvTagIssuerUrl = 0x5F50,
    
    /// 1-4 languages stored in order of preference, each represented by 2 alphabetical characters according to ISO 639.
    /// Note: EMVCo strongly recommends that cards be personalised with data element '5F2D' coded in lowercase, but that terminals accept the data element whether it is coded in upper or lower case.
    VTCEmvTagLanguagePreference = 0x5F2D,
    
    /// ATC value of the last transaction that went online.
    VTCEmvTagLastOnlineApplicationTransactionCounterAtcRegister = 0x9F13,
    
    /// Provides the SFI of the Transaction Log file and its number of records.
    VTCEmvTagLogEntry = 0x9F4D,
    
    /// List (in tag and length format) of data objects representing the logged data elements that are passed to the terminal when a transaction log record is read.
    VTCEmvTagLogFormat = 0x9F4F,
    
    /// Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal with online capability.
    VTCEmvTagLowerConsecutiveOfflineLimit = 0x9F14,
    
    /// Classifies the type of business being done by the merchant, represented according to ISO 8583:1993 for Card Acceptor Business Code.
    VTCEmvTagMerchantCategoryCode = 0x9F15,
    
    /// When concatenated with the Acquirer Identifier, uniquely identifies a given merchant.
    VTCEmvTagMerchantIdentifier = 0x9F16,
    
    /// Indicates the name and location of the merchant.
    VTCEmvTagMerchantNameandLocation = 0x9F4E,
    
    /// Number of PIN tries remaining.
    VTCEmvTagPersonalIdentificationNumberPinTryCounter = 0x9F17,
    
    /// Indicates the method by which the PAN was entered, according to the first two digits of the ISO 8583:1987 POS Entry Mode.
    VTCEmvTagPointOfServiceEntryMode = 0x9F39,
    
    /// Contains a list of terminal resident data objects (tags and lengths) needed by the ICC in processing the GET PROCESSING OPTIONS command.
    VTCEmvTagProcessingOptionsDataObjectList = 0x9F38,
    
    /// Contains the data objects (without tags and lengths) returned by the ICC in response to a command.
    VTCEmvTagResponseMessageTemplateFormat1 = 0x80,
    
    /// Contains the data objects (with tags and lengths) returned by the ICC in response to a command.
    VTCEmvTagResponseMessageTemplateFormat2 = 0x77,
    
    /// Service code as defined in ISO/IEC 7813 for track 1 and track 2.
    VTCEmvTagServiceCode = 0x5F30,
    
    /// Identifies the SFI to be used in the commands related to a given AEF or DDF. The SFI data object is a binary field with the three high order bits set to zero..
    VTCEmvTagShortFileIdentifier = 0x88,
    
    /// Digital signature on critical application parameters for DDA or CDA.
    VTCEmvTagSignedDynamicApplicationData = 0x9F4B,
    
    /// Digital signature on critical application parameters for SDA.
    VTCEmvTagSignedStaticApplicationData = 0x93,
    
    /// List of tags of primitive data objects defined in this specification whose value fields are to be included in the Signed Static or Dynamic Application Data.
    VTCEmvTagStaticDataAuthenticationTagList = 0x9F4A,
    
    /// Indicates the card data input, CVM, and security capabilities of the terminal.
    VTCEmvTagTerminalCapabilities = 0x9F33,
    
    /// Indicates the country of the terminal, represented according to ISO 3166.
    VTCEmvTagTerminalCountryCode = 0x9F1A,
    
    /// Indicates the floor limit in the terminal in conjunction with the AID.
    VTCEmvTagTerminalFloorLimit = 0x9F1B,
    
    /// Designates the unique location of a terminal at a merchant.
    VTCEmvTagTerminalIdentification = 0x9F1C,
    
    /// Application-specific value used by the card for risk management purposes.
    VTCEmvTagTerminalRiskManagementData = 0x9F1D,
    
    /// Indicates reader capabilities, requirements, and preferences to the card. TTQ byte 2 bits 8-7 are transient values, and reset to zero at the beginning of the transaction. All other TTQ bits are static values, and not modified based on transaction conditions. TTQ byte 3 bit 7 shall be set by the acquirer-merchant to 1b.
    VTCEmvTagTerminalTransactionQualifiers = 0x9F66,
    
    /// Indicates the environment of the terminal, its communications capability, and its operational control.
    VTCEmvTagTerminalType = 0x9F35,
    
    /// Status of the different functions as seen from the terminal.
    VTCEmvTagTerminalVerificationResults = 0x95,
    
    /// Discretionary part of track 1 according to ISO/IEC 7813.
    VTCEmvTagTrack1DiscretionaryData = 0x9F1F,
    
    /// Discretionary part of track 2 according to ISO/IEC 7813.
    VTCEmvTagTrack2DiscretionaryData = 0x9F20,
    
    /// Contains the data elements of track 2 according to ISO/IEC 7813, excluding start sentinel, end sentinel, and Longitudinal Redundancy Check (LRC), as follows:
    ///
    /// Primary Account Number (n, var. up to 19)
    /// Field Separator (Hex 'D') (b)
    /// Expiration Date (YYMM) (n 4)
    /// Service Code (n 3)
    /// Discretionary Data (defined by individual payment systems) (n, var.)
    /// Pad with one Hex 'F' if needed to ensure whole bytes (b)
    VTCEmvTagTrack2EquivalentData = 0x57,
    
    /// This is a data object defined by MasterCard which indicates the type of transaction being performed, and which may be used in card risk management.
    VTCEmvTagTransactionCategoryCode = 0x9F53,
    
    /// Result of a hash function specified in Book 2, Annex B3.1.
    VTCEmvTagTransactionCertificateHashValue = 0x98,
    
    /// List of data objects (tag and length) to be used by the terminal in generating the TC Hash Value.
    VTCEmvTagTransactionCertificateDataObjectList = 0x97,
    
    /// Indicates the currency code of the transaction according to ISO 4217.
    VTCEmvTagTransactionCurrencyCode = 0x5F2A,
    
    /// Indicates the implied position of the decimal point from the right of the transaction amount represented according to ISO 4217.
    VTCEmvTagTransactionCurrencyExponent = 0x5F36,
    
    /// Local date that the transaction was authorised.
    VTCEmvTagTransactionDate = 0x9A,
    
    /// Data entered by the cardholder for the purpose of the PIN verification.
    VTCEmvTagTransactionPersonalIdentificationNumberData = 0x99,
    
    /// Code defining the common currency used by the terminal in case the Transaction Currency Code is different from the Application Currency Code.
    VTCEmvTagTransactionReferenceCurrencyCode = 0x9F3C,
    
    /// Indicates the implied position of the decimal point from the right of the transaction amount, with the Transaction Reference Currency Code represented according to ISO 4217.
    VTCEmvTagTransactionReferenceCurrencyExponent = 0x9F3D,
    
    /// Counter maintained by the terminal that is incremented by one for each transaction.
    VTCEmvTagTransactionSequenceCounter = 0x9F41,
    
    /// Indicates the functions performed in a transaction.
    VTCEmvTagTransactionStatusInformation = 0x9B,
    
    /// Local time that the transaction was authorised.
    VTCEmvTagTransactionTime = 0x9F21,
    
    /// Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code.
    VTCEmvTagTransactionType = 0x9C,
    
    /// Value to provide variability and uniqueness to the generation of a cryptogram.
    VTCEmvTagUnpredictableNumber = 0x9F37,
    
    /// Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal without online capability.
    VTCEmvTagUpperConsecutiveOfflineLimit = 0x9F23,
}   VTCEmvTag;

#endif /* VTCEmvTag_h */
